application:
  host: "http://localhost:${server.port}/${server.servlet.context-path}"
  host.client: "http://localhost:4200"
  audit:
    flushOnWrite: true
#    logFilePath: /opt/app/logs/infrastructure-audit.log | on docker
    logFilePath: /src/main/resources/logs/infrastructure-audit.log
    logEvents: true

server:
  port: ${PORT:8080}
  servlet:
    context-path: "/ws-infrastructure"
    session:
      cookie:
        secure: false

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/yourDb?currentSchema=dev
    username: ""
    password: ""
    initialization-mode: always
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  thymeleaf:
    cache: false
    prefix: "file:src/main/resources/templates/"
  devtools:
    restart:
      enabled: 'true'
      poll-interval: '2s'
      quiet-period: '1s'
      additional-paths:
        - src/main/java/
    livereload:
      enabled: 'true' # Enable or disable livereload
  mvc:
    log-request-details: 'true'
  web:
    resources:
      static-locations: file:src/main/resources/static/, classpath:/static/
      cache:
        period: 0

springdoc:
  api-docs:
    path: /api-docs
    version: openapi_3_1
  swagger-ui:
    use-root-path: true
    tryItOutEnabled: true
    operationsSorter: method
    tagsSorter: alpha
    filter: true

debug: false # Enable or disable debug mode

logging:
  file:
    name: /src/main/resources/logs/infrastructure-audit.log
  level:
    ro:
      infrastructure:
        be: DEBUG # Set logging level for infrastructure package
    org:
      springframework:
       security: DEBUG
       web:
        server:
          ResponseStatusExceptionResolver: ERROR
        filter:
          CommonsRequestLoggingFilter: DEBUG
        nodeValue: DEBUG
